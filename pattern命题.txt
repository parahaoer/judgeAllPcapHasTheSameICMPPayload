1、问题：计算模式字符串pattern	  
给定一个字符串str。确定是否存在pattern字符串，str能够由该pattern字符串循环填充而成。如果存在就返回pattern字符串，否则返回空串. 要求时间复杂度为O(n)  
  
示例1：  
输入：str = “1231231”   
输出：”123”  
解释：“1231231”可以由字符串“123”、“123”、“1”拼接而成。  
  
示例2：  
输入：str = “123456789”  
输出： “”  
  
说明：pattern不包含重复的字符。  
  
2、进阶版：    
问题：计算模式字符串pattern	   
给定一个字符串str和非负整数k。确定是否存在pattern字符串，str能够由该pattern字符串循环填充，然后替换前k个字符而成。如果存在就返回pattern字符串，否则返回空串. 要求时间复杂度为O(n)  
  
示例1：  
输入：str = “ab31231”,  k = 2   
输出：”123”  
解释：“ab31231”可以由字符串“123”、“123”、“1”拼接得到1231231，然后将其前2个字符替换成ab而得到。  
  
示例2：  
输入：str = “123456789”， k = 3  
输出： “”  
  
说明：  
1)	pattern不包含重复的字符。  
2)	str.length() – k > pattern.length()  
